@using Atrasti.Models.Chat
@{
    ViewData["Title"] = "Index";

    IList<ChatFriendViewModel> friends = ViewData["friends"] as IList<ChatFriendViewModel>;
}

<div style="min-height:calc(97vh - 70px); display: flex">
    <div class="row m-0 w-100">
        <div style="background-color: red" class="col-3 text-white bg-dark">
            <ol class="p-0" id="chat-friends">
                @if (friends.Count == 0)
                {
                    <li style="padding: 10px; list-style: none">You have no active chats.</li>
                }
                else
                {
                    <li style="padding: 10px; list-style: none">Chat</li>
                    foreach (ChatFriendViewModel friend in friends)
                    {
                        <li id="@Html.Raw("chat-friend-" + friend.FriendId)" style="padding: 10px; list-style:none; cursor: pointer" target-user="@Html.Raw(friend.FriendId)" onclick="@Html.Raw("OpenChat(" + friend.FriendId + ")")">@friend.FriendCompany</li>
                    }
                }
            </ol>
        </div>
        <div class="col-9 bg-light p-0">
            <div id="chat-messages">

            </div>

            <div id="chat-form" style="position: absolute; bottom: 0; background-color: black; width: 100%">
                <form onSubmit="OnChat(event)">
                    <div style="position: relative; flex: none; order: 3; box-sizing: border-box; width: 90%; min-height: 62px; color: white"
                         contenteditable="true" ref="textarea" id="chat-post-content">
                    </div>

                    <button type="submit">Send</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.3/signalr.min.js"></script>
    <script>
    let currentFriendId = -1;
    
    function OnChat(event) {
        event.preventDefault();
        
        const content = document.getElementById("chat-post-content").innerHTML;
        if (content.length === 0 || currentFriendId === -1) return;
        
        const targetId = document.getElementById(`chat-friend-${currentFriendId}`).getAttribute("target-user");
        hubConnection.invoke("SendChatMessage", targetId, content).then(t => {
            if (t.errorCode === -1) { // Error
                
                
            } else { //Succeed
                console.log(t);
                addSendChatMessage(t.chatId, t.message, t.fromId, targetId, t.fromCompany);
            }
        });
    }
    
    function OpenChat(id) {
        if (id === -1) return;
        
        if (id === currentFriendId) return;
        
        const chatFriend = $(`#chat-friend-${id}`);
        if (chatFriend === null) return;
        
        chatFriend.css({backgroundColor: 'red'});
        chatFriend.addClass("active");
        
        if (currentFriendId !== null){
            $(`#chat-friend-${currentFriendId}`).css({backgroundColor: 'transparent'}).removeClass("active");
        }
        
        currentFriendId = id;
    }
    
    const hubConnection = new signalR.HubConnectionBuilder()
                            .withUrl("/chatHub")
                            .configureLogging(signalR.LogLevel.Information)
                            .build();

    hubConnection.on("ReceiveMessage", function (chatId, fromUser, fromCompany, message) {
        const msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        
        addReceiveChatMessage(chatId, message, fromUser, fromCompany);
    });
    
    function addReceiveChatMessage(chatId, message, fromUser, company) {
        const friendElement = document.querySelector(`[target-user="${fromUser}"]`)
        
        if (friendElement !== null) {
            if (friendElement.classList.contains("active")) {
                    const divMsg = document.createElement("div");
                    divMsg.id = `message-${chatId}`;
                    divMsg.classList.add("chat-message");
                    divMsg.classList.add("row-no-padding");
                    divMsg.classList.add("p-1");
                    divMsg.classList.add("float-left");
                    divMsg.classList.add("w-100");
                    
                    const divContent = document.createElement("div");
                    divContent.style.width = "calc(100% - 60px)";
                    divContent.style.padding = "10px";
                    
                    divContent.classList.add("float-left");
                    
                    const img = document.createElement("img");
                    img.src = window.location.origin + `/logos/${fromUser}.png`;
                    img.style.borderRadius = "50%";
                    img.style.width = "60px";
                    img.style.height = "60px";
                    
                    const companySpan = document.createElement("span");
                    companySpan.classList.add("float-left");
                    companySpan.classList.add("w-100");
                    companySpan.innerHTML = company;
                    
                    const messageSpan = document.createElement("span");
                    messageSpan.innerHTML = message;
                    
                    divContent.appendChild(companySpan);
                    divContent.appendChild(messageSpan);
                    
                    divMsg.appendChild(img);
                    divMsg.appendChild(divContent);
                
                document.getElementById("chat-messages").appendChild(divMsg);
            } else {
                console.log('Add a notification for new message!');
            }
        }        
    }
    
        function addSendChatMessage(chatId, message, fromUser, toUser, company) {
            const friendElement = document.querySelector(`[target-user="${toUser}"]`)
            
            if (friendElement !== null) {
                if (friendElement.classList.contains("active")) {
                    const divMsg = document.createElement("div");
                    divMsg.id = `message-${chatId}`;
                    divMsg.classList.add("chat-message");
                    divMsg.classList.add("row-no-padding");
                    divMsg.classList.add("p-1");
                    divMsg.classList.add("float-left");
                    divMsg.classList.add("w-100");
                    
                    const divContent = document.createElement("div");
                    divContent.style.width = "calc(100% - 60px)";
                    divContent.style.padding = "10px";
                    
                    divContent.classList.add("float-left");
                    
                    const img = document.createElement("img");
                    img.src = window.location.origin + `/logos/${fromUser}.png`;
                    img.style.borderRadius = "50%";
                    img.style.width = "60px";
                    img.style.height = "60px";
                    
                    const companySpan = document.createElement("span");
                    companySpan.classList.add("float-left");
                    companySpan.classList.add("w-100");
                    companySpan.innerHTML = company;
                    
                    const messageSpan = document.createElement("span");
                    messageSpan.innerHTML = message;
                    
                    divContent.appendChild(companySpan);
                    divContent.appendChild(messageSpan);
                    
                    divMsg.appendChild(img);
                    divMsg.appendChild(divContent);
                    
                    document.getElementById("chat-messages").appendChild(divMsg);
                } else {
                    console.log('Add a notification for new message!');
                }
            }        
        }

    hubConnection.start().then(function () {
        console.log('connection successful!');
        OpenChat(@(friends.Count > 0 ? friends[0].FriendId : -1));
    }).catch(function (err) {
        return console.error(err.toString());
    });
    </script>
}